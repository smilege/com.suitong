(function() {
    'use strict';

    angular
        .module('<%=angularAppName%>')
        .controller('<%= entityAngularName %>Controller', <%= entityAngularName %>Controller);

    <%= entityAngularName %>Controller.$inject = ['<%= entityAngularName %>Service', 'ngDialog', '$state', '$scope', '$timeout', 'PublicService'];

    function <%= entityAngularName %>Controller(<%= entityAngularName %>Service, ngDialog, $state, $scope, $timeout, PublicService) {
        $scope.formParam = {

        };
		$scope.datePickerOpenStatus = {};
        $scope.tablesConfig = {
            showCheckBox:true,
			tableWidth:'table-default-width',
            tableTitles:[
			<%_ for (idx in fields) {
				const fieldName = fields[idx].fieldName;
				const fieldNameHumanized = fields[idx].fieldNameHumanized;
				const fieldType = fields[idx].fieldType;
				const translationKey = keyPrefix + fieldName;
				if(['Instant', 'ZonedDateTime'].includes(fieldType)){
				_%>
                {title:"<%= translationKey %>", filed: '<%= fieldName %>',type:'date',width:'table-item-pre-1'},  
				<%_ } else if (idx == 0){ _%>
				{title:"<%= translationKey %>", filed: '<%= fieldName %>',type:'text-btn',width:'table-item-pre-1',actions:[
                    {actionName:'show<%= entityAngularName %>(item.id)'}
                    ]}, 
				<%_ } else { _%>
				{title:"<%= translationKey %>", filed: '<%= fieldName %>',type:'text',width:'table-item-pre-1'},    
				<%_ } _%>
			<%_ }_%>
                {title:"entity.action.operation",filed:'operation',type:'btn',width:'table-item-pre-1',actions:[
                    {actionName:'edit<%= entityAngularName %>(item.id)',name:'entity.action.edit'},
                    {actionName:'delete<%= entityAngularName %>(item.id)',name:'entity.action.delete'}
                    ]}
                    ],
	
            url:'api/<%= entityInstance %>/list<%= entityClass %>',
            
			formParams:{
				<%_ for (idx in fields) {
					const fieldName = fields[idx].fieldName;
					if (fields[idx].javadoc != null) { _%>
						<%= fieldName %> : $scope.formParam.<%= fieldName %>,					
				<%_	}
				} _%>
			}
		};
						
		<%_  var count=0;		
			for (idx in fields) {
				if (fields[idx].javadoc != null) { 
					count++;
				}
			}_%>
		
		<%_ if (count!=0){ _%>
			$scope.loadAll = function() {
				$scope.refreshTableList($scope.formParam);
				};	
		<%_}_%>
		$scope.resetSearch = function() {
			$scope.formParam = {};
			};
		<%_ var t=0;
			for (idx in fields) {
				const fieldType = fields[idx].fieldType;				   
				if (fields[idx].javadoc != null) {						
					if(['Instant', 'ZonedDateTime', 'LocaleDate'].includes(fieldType)){
						t++;
					}
				}
			}
			_%>
		
		<%_ if (t!=0){ _%>
			$scope.openCalendar = function (date) {
				$scope.datePickerOpenStatus[date] = true;
			};
		<%_}_%>
		
		$scope.confirmDelete = function(id){
			 <%= entityAngularName %>Service.delete<%= entityClass %>(id)
				.then(function (response){
					if(response.statusCode === "0000"){
						$scope.loadAll();
					}
				});
		};
		
		
		$scope.delete<%= entityAngularName %> = function(id) {
			var msg = "global.messages.deleteConfirm";
			PublicService.showConfirmDialog(msg, "confirmDelete", $scope, id);
        };
		
		
		  $scope.batchDelete = function() {
        	$scope.choseArr = $scope.getCheckValues('delFlag').check;
        	$scope.choseArrParam = $scope.getCheckValues('delFlag').checkedParamFlags;
        	var msg = "global.messages.deleteConfirm";
        	PublicService.showConfirmDialog(msg, "confirmBatchDelete", $scope, $scope.checked);
        };
        
        $scope.confirmBatchDelete = function(checkeds){
        	var delObj = {"ids":checkeds};
			 <%= entityAngularName %>Service.batchDelete<%= entityClass %>(delObj)
				.then(function (response){
					if(response.statusCode === "0000"){
						$scope.loadAll();
					}
				});
		};
		
		
		
        $scope.add<%= entityAngularName %> = function(){
            $state.go('app.<%= entityStateName %>-edit',{id:null});
        };

        $scope.edit<%= entityAngularName %> = function (id) {
            $state.go('app.<%= entityStateName %>-edit',{id:id});
        };
		
		$scope.show<%= entityAngularName %> = function (id) {
        	$state.go('app.<%= entityStateName %>-detail',{id:id});
        };

    }
})();
